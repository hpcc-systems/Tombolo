## ENVIRONMENT (Options : production || development) -----
NODE_ENV=development


## HOST (Eg: If running locally it is localhost) ---------
HOST_HOSTNAME=


## PORT defined for back end service(node) ---------------
PORT=3000

## SSL CERTIFICATE ---------------------------------------
# If Mysql has ssl enabled (options : true || false ). 
MYSQL_SSL_ENABLED=false
# If using ssl, provide relative path to the directory where the certificate is stored. Also,  provide the certificate name and certificate key name;
# ( Eg : ../../myCertificates, ./certificateVault)
CERT_PATH=../certs/ssl
CERTIFICATE_NAME=
CERTIFICATE_KEY=

## FRONT END SERVICE (Web/client) ------------------------
#WEB_PORT=3001
#WEB_EXPOSED_PORT=443
#WEB_EXPOSED_HTTP_PORT=84
# WEB_URL <http/https>://<HOST_HOSTNAME>. (if running locally add the port number also -http://localhost:3001)
HTTP_PORT=3001
HTTPS_PORT=443
WEB_URL=

## DATABASE DETAILS -------------------------------------- 
DB_USERNAME=
DB_PASSWORD=
DB_PORT=3306
DB_NAME=tombolo
# If you are running app on docker DB_HOSTNAME=mysql_db. This is the service name for the database. If not on docker provide the host name (Eg: localhost)
DB_HOSTNAME=mysql_db

## APPLICATION AUTHENTICATION ---------------------------
# For user authentication, you have 2 options - Authservice or Azure_ad. If you are using Auth service leave the Azure variable as they are - no modification required and vice versa.
# If you are using Auth service. you will need to set-up the auth service separately. If you already have an instance of Authservice running, you can use that as well
# For fresh Auth service set up follow this link - https://github.com/hpcc-systems/Auth-Service

# AUTH_SERVICE_URL - This is the auth service URL plus /api/auth. If you are running this app on local the url look something like this - http://localhost:3003/api/auth
AUTH_SERVICE_URL=
# AUTHSERVICE_TOMBOLO_APP_ID - This is the app id that is used while creating application on auth service.In Auth service it is refereed as Client Id
AUTHSERVICE_TOMBOLO_APP_ID=

# AZURE - Update below values only if using Azure.
# APP_AUTH_METHOD is azure_ad. if not using Azure leave blank. Tenant ID and client ID can be found on Azure portal
APP_AUTH_METHOD=azure_ad
TENENT_ID=
CLIENT_ID=
# AUDIENCE  is same as client ID
AUDIENCE=
AUTHORITY=login.microsoftonline.com
DISCOVERY=.well-known/openid-configuration
MSAL_VERSION=v2.0
VALIDATE_ISSUER=true
PASS_REQ_TO_CALLBACK=false
LOGGING_LEVEL=info

## EMAIL (used for notifications) -----------------------                                 
EMAIL_SMTP_HOST=
EMAIL_PORT=
EMAIL_SENDER=donotreply@tombolo.com


## CIPHERING and DECIPHERING -----------------------------
# provide a encryption key. it should be a 32 byte string It can be generated with openssl - openssl rand -base64 32
ALGORITHM = aes-256-ctr
IV_LENGTH = 16
ENCRYPTION_KEY =

## REAL BI -----------------------------------------------
# Tombolo gives user an ability to create Real-BI dashboards via Tombolo. If you have Real-BI application running provide the url below. If not leave blank
REALBI_URL=


## KAFKA --------------------------------------------------
# Uncomment and provide the values below if you are using Kafka. If kafka is not used leve as it is. 
# - To create keys, please refer here https://github.com/edenhill/librdkafka/wiki/Using-SSL-with-librdkafka#create-a-ca-certificate. 
# - For documentation on bitnami kafka and zookeeper docker images and setup, please refer https://github.com/bitnami/bitnami-docker-kafka, https://github.com/bitnami/bitnami-docker-zookeeper, 
# - For details on SSL config https://github.com/bitnami/bitnami-docker-kafka/issues/129 
# KAFKA_PORT=9093
# AUTHSERVICE_TOMBOLO_CLIENT_ID=tombolo_os
# KAFKA_CLIENT_PORT=9092
# KAFKA_EXTERNAL_PORT=29093
# KAFKA_MGR_PORT=9000
# KAFKA_ADVERTISED_LISTENER=kafka
# ZK_PORT=3181

# ZOO_SERVER_USERS=
# ZOO_SERVER_PASSWORDS=
# ZOO_CLIENT_USER=
# ZOO_CLIENT_PASSWORD=
# ZOO_TLS_CLIENT_KEYSTORE_FILE=/opt/bitnami/kafka/conf/certs/zookeeper.keystore.jks
# ZOO_TLS_CLIENT_KEYSTORE_PASSWORD=
# ZOO_TLS_CLIENT_TRUSTSTORE_FILE=/opt/bitnami/kafka/conf/certs/zookeeper.truststore.jks
# ZOO_TLS_CLIENT_TRUSTSTORE_PASSWORD=
# KAFKA_HOST_NAME=
# KAFKA_CLIENT_USER=
# KAFKA_CLIENT_PASSWORD=
# KAFKA_CERTIFICATE_PASSWORD=
# KAFKA_ZOOKEEPER_CERTS_PATH=

# JOB_COMPLETE_TOPIC=
# START_JOB_TOPIC=
# JOB_COMPLETE_GROUP_ID=



