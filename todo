## Create Migration and Model for following tables:

1. `monitoring_types` table:
    - `id` (Primary Key, uuid , not null)
    - `name` (String, not null, unique)
    - createdAt (timestamp, not null, default: current_timestamp)
    - updatedAt (timestamp, not null, default: current_timestamp)
    - deletedAt (timestamp, default: null)
    - createdBy (JSON, not null, default: {name: 'system', email: 'NA'})
    - updatedBy (JSON, not null, default: {name: 'system', email: 'NA'})
    - deletedBy (JSON, default: null)
    - paranoid (boolean, default: true)

2. `asr_domains` table:
    - `id` (Primary Key, uuid , not null)
    - `name` (  String, not null, unique)
    - createdAt (timestamp, not null, default: current_timestamp)
    - updatedAt (timestamp, not null, default: current_timestamp)
    - createdBy (JSON, not null, default: {name: 'system', email: 'NA'})
    - updatedBy (JSON, not null, default: {name: 'system', email: 'NA'})
    - deletedBy (JSON, default: null)
    - paranoid (boolean, default: true)


3. `asr_products` table:
    - `id` (Primary Key, uuid , not null)
    - `name` (String, not null, unique)
    - createdAt (timestamp, not null, default: current_timestamp)
    - updatedAt (timestamp, not null, default: current_timestamp)
    - createdBy (JSON, not null, default: {name: 'system', email: 'NA'})
    - updatedBy (JSON, not null, default: {name: 'system', email: 'NA'})
    - deletedBy (JSON, default: null)
    - paranoid (boolean, default: true)

4. `asr_monitoring_type_to_domains_relation` junction table:
    - `id` (Primary Key, uuid , not null)
    - `monitoring_type_id` (Foreign Key referencing `monitoring_types.id`)
    - `domain_id` (Foreign Key referencing `domains.id`)
    - constraint unique (`monitoring_type_id`, `domain_id`)
    - constraint on delete/update cascade on `monitoring_type_id`
    - constraint on delete/update cascade on `domain_id`
    - createdAt (timestamp, not null, default: current_timestamp)
    - updatedAt (timestamp, not null, default: current_timestamp)
    - createdBy (JSON, not null, default: {name: 'system', email: 'NA'})
    - updatedBy (JSON, not null, default: {name: 'system', email: 'NA'})
    - deletedBy (JSON, default: null)
    - paranoid (boolean, default: true)


5. `asr_domain_to_products_relation` junction table:
    - `id` (Primary Key, uuid , not null)
    - `domain_id` (Foreign Key referencing `domains.id`)
    - `product_id` (Foreign Key referencing `products.id`)
    - constraint unique (`domain_id`, `product_id`)
    - constraint on delete/update cascade on `domain_id`
    - constraint on delete/update cascade on `product_id`
    - createdAt (timestamp, not null, default: current_timestamp)
    - updatedAt (timestamp, not null, default: current_timestamp)
    - createdBy (JSON, not null, default: {name: 'system', email: 'NA'})
    - updatedBy (JSON, not null, default: {name: 'system', email: 'NA'})
    - deletedBy (JSON, default: null)
    - paranoid (boolean, default: true)

 PRODUCT has extra FIELDS
## Create seed data and files for above  tables:

## Create routes for following:
    1. Insert data in asr_domain tables - 
        the request comes with monitoring_type_id and domain name. entry should be made in asr_monitoring_type_to_domains_relation table asr_domain_to_products_relation
    2. Insert data in asr_products table -
        the request comes with domain_id and product name. entry should be made in asr_domain_to_products_relation table
    3. Get all domains for a monitoring type
        the request comes with monitoring_type_id. all the domains for that monitoring type should be returned
    4. Get all products for a domain
        the request comes with domain_id. all the products for that domain should be returned
    5. Delete a domain
        the request comes with domain_id. the domain should be deleted from asr_domains table and all the relations from asr_monitoring_type_to_domains_relation and asr_domain_to_products_relation should be deleted
    6. Delete a product
        the request comes with product_id. the product should be deleted from asr_products table and all the relations from asr_domain_to_products_relation should be deleted
    7. Update a domain
        the request comes with domain_id and new domain name. the domain name should be updated in asr_domains table
    8. Update a product
        the request comes with product_id and new product name. the product name should be updated in asr_products table
    9. Get all domains regardless of monitoring type
        all the domains should be returned
    10. Get all products regardless of domain
        all the products should be returned

## UI Fetch functons for above routes:
    1. Create fetch function for all the above routes

## UI - ASR Integration settings page
    1. Display all the domains in a domain table
        - the table should have columns - domain name, monitoring types displayed as tags, actions coulmn with delete, update, view icons
        - Button to delete a domain - pop confirmation required
        - Button to update a domain - should open a modal with a form. the form should pre-populate the domain name and monitoring types
            - The monitoring types should be a select component 
            - The select options should be list of all monitoring types
            - Existing monitoring types should be pre-selected and displayed as tags
            - The select component when open should clearly show if a monitoring type is already selected with check mark or something related
            - Saving from should give summary of changes that will be made and ask for re-confirmation
    2. Display all the products in a product table
        - the table should have columns - product name, domains displayed as tags, actions coulmn with delete, update, view icons
        - Button to delete a product - pop confirmation required
        - Button to update a product - should open a modal with a form. the form should pre-populate the product name and domains
            - The domains should be a select component 
            - The select options should be list of all domains
            - Existing domains should be pre-selected and displayed as tags
            - The select component when open should clearly show if a domain is already selected with check mark or something related
            - Saving from should give summary of changes that will be made and ask for re-confirmation