NODE_ENV=development
PORT=3000
WEB_PORT=3001
WEB_URL=http://localhost:3001

# Secret
secret=

#Database Details
DB_USERNAME=
DB_PASSWORD=
DB_PORT=3306
DB_NAME=tombolo
DB_HOSTNAME=127.0.0.1

# Tombolo uses AuthService for Authentication and Authorization. This has to be setup seperatly.
# AUTH_SERVICE_URL points to the URL where AuthService is running
AUTH_SERVICE_URL=<protocol>://<host_name>:<port>/api/auth
APP_ADMIN_PASSWORD=

#LDAP details to query users/groups from LDAP when adding Consumers/Suppliers to Tombolo
LDAP_URL=
BASE_DN=
LDAP_USER=
LDAP_PASSWORD=

# This is the client id of Tombolo app created in AuthService. This can be retrieved from the AuthService app's MySQL database
AUTHSERVICE_TOMBOLO_CLIENT_ID=

# This is the URL to the password reset page in Tombolo
WEB_URL=<protocol>://<host_name>:<port>/reset-password

#Optional Kafka and Zookeeper setup
#To create keys, please refer here https://github.com/edenhill/librdkafka/wiki/Using-SSL-with-librdkafka#create-a-ca-certificate
#For documentation on bitnami kafka and zookeeper docker images and setup, please refer https://github.com/bitnami/bitnami-docker-kafka, https://github.com/bitnami/bitnami-docker-zookeeper
#For details on SSL config https://github.com/bitnami/bitnami-docker-kafka/issues/129
KAFKA_PORT=9092
KAFKA_EXTERNAL_PORT=29092
KAFKA_MGR_PORT=9000
KAFKA_ADVERTISED_LISTENER=
ZK_PORT=2181
ZOO_SERVER_USERS=
ZOO_SERVER_PASSWORDS=
ZOO_CLIENT_USER=
ZOO_CLIENT_PASSWORD=
ZOO_TLS_CLIENT_KEYSTORE_FILE=/opt/bitnami/kafka/conf/certs/zookeeper.keystore.jks
ZOO_TLS_CLIENT_KEYSTORE_PASSWORD=
ZOO_TLS_CLIENT_TRUSTSTORE_FILE=/opt/bitnami/kafka/conf/certs/zookeeper.truststore.jks
ZOO_TLS_CLIENT_TRUSTSTORE_PASSWORD=
KAFKA_HOST_NAME=
KAFKA_CLIENT_USER=
KAFKA_CLIENT_PASSWORD=
KAFKA_CERTIFICATE_PASSWORD=

#Kafka topic used by Tombolo to recieve job completion messages
JOB_COMPLETE_TOPIC=tombolo_dev
START_JOB_TOPIC=
#Kafka groupId
JOB_COMPLETE_GROUP_ID=tombolo_dev

#Email
EMAIL_SMTP_HOST=
EMAIL_PORT=
EMAIL_SENDER=donotreply@tombolo.com

REALBI_URL=

# For string encryption and decryption. Refer - https://www.geeksforgeeks.org/node-js-crypto-createdecipheriv-method/
ALGORITHM = 
IV_LENGTH = 
ENCRYPTION_KEY = 