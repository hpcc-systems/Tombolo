name: Build & Deploy to DEV 
on: 
  push:
      branches:
        - dev
  workflow_dispatch:      
env:
  PORT: ${{ secrets.PORT }}
  WEB_PORT: ${{ secrets.WEB_PORT }}
  WEB_EXPOSED_PORT: ${{ secrets.WEB_EXPOSED_PORT }}
  WEB_EXPOSED_HTTP_PORT: ${{ secrets.WEB_EXPOSED_HTTP_PORT }}
  PROXY_URL: ${{ secrets.PROXY_URL }}
  HOST_HOSTNAME: ${{ secrets.HOST_HOSTNAME }}
  WEB_URL: ${{ secrets.WEB_URL }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_PORT: ${{ secrets.DB_PORT }}
  DB_NAME: ${{ secrets.DB_NAME }}
  MYSQL_SSL_ENABLED: ${{ secrets.MYSQL_SSL_ENABLED }}
  DB_HOSTNAME: ${{ secrets.DB_HOSTNAME }}
  AUTH_SERVICE_URL: ${{ secrets.AUTH_SERVICE_URL }}
  AUTHSERVICE_TOMBOLO_CLIENT_ID: ${{ secrets.AUTHSERVICE_TOMBOLO_CLIENT_ID }}
  REACT_APP_PROXY_URL: ${{ secrets.REACT_APP_PROXY_URL }}
  secret: ${{ secrets.secret }}
  AZURE_WEBAPP_PACKAGE_PATH: './client-reactjs/build'
  AZURE_WEBAPP_PACKAGE_PATH_API: './server'
  JOB_COMPLETE_GROUP_ID: 'tombolo_dev'
  REACT_APP_APP_AUTH_METHOD: ${{ secrets.REACT_APP_APP_AUTH_METHOD }}
  REACT_APP_AZURE_CLIENT_ID: ${{ secrets.REACT_APP_AZURE_CLIENT_ID }}
  REACT_APP_AZURE_TENENT_ID: ${{ secrets.REACT_APP_AZURE_TENENT_ID }}
  REACT_APP_AZURE_REDIRECT_URI: ${{ secrets.REACT_APP_AZURE_REDIRECT_URI }}
  REACT_APP_AZURE_API_TOKEN_SCOPE: ${{ secrets.REACT_APP_AZURE_API_TOKEN_SCOPE }}
jobs:    
  build-ui:
    name: build-ui
    runs-on: self-hosted    
    #environment:
      #name: 'DEV'
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 14
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: npm install, build, and test
      run: |
        # Build and test the project, then
        # deploy to Azure Web App.
        npm install
        CI=false && npm run build --if-present
      working-directory: client-reactjs  
    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'tomboloui2-eastus2-dev'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  build_api:
    name: build-api-container
    runs-on: self-hosted
    environment:
      name: 'DEV'
    steps:            
    - uses: actions/checkout@v2
    - name: create env file
      run: |
        touch .env
        echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
        echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
        echo DB_PORT=${{ secrets.DB_PORT }} >> .env
        echo DB_NAME=${{ secrets.DB_NAME }} >> .env
        echo DB_HOSTNAME=${{ secrets.DB_HOSTNAME }} >> .env
        echo AUTH_SERVICE_URL=${{ secrets.AUTH_SERVICE_URL }} >> .env
        echo AUTHSERVICE_TOMBOLO_CLIENT_ID=${{ secrets.AUTHSERVICE_TOMBOLO_CLIENT_ID }} >> .env
        echo secret=${{ secrets.secret }} >> .env
        echo MYSQL_SSL_ENABLED=${{ secrets.MYSQL_SSL_ENABLED }}
        echo JOB_COMPLETE_GROUP_ID=tombolo_dev
      working-directory: server
      
    - name: Create cluster-whitelist
      run: |
         touch cluster-whitelist.js
         echo ${{ secrets.CLUSTER_WHITE_LIST }} >> cluster-whitelist.js
      working-directory: server  
    
    - run: |                
        #build 
        docker build -t tombolo-api ./server        
        #tag
        docker tag tombolo-api tombolodevcr.azurecr.io/tombolo-api
        #login to Azure
        az login --identity        
        #login to container registry
        az acr login --name tombolodevcr        
        #push image to acr
        docker push tombolodevcr.azurecr.io/tombolo-api
    
    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'tomboloapi-eastus2-dev'
        #publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: 'tombolodevcr.azurecr.io/tombolo-api'  
