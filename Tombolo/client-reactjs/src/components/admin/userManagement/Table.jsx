import React from 'react';
import { Table, Tooltip, Popconfirm, Popover } from 'antd';
import { EyeOutlined, EditOutlined, DeleteOutlined, DownOutlined } from '@ant-design/icons';

import { handleDeleteUser } from './Utils';

const UserManagementTable = ({
  setEditingData,
  users,
  setSelectedUser,
  setDisplayAddUserModal,
  setDisplayUserDetailsModal,
  setDisplayAddRejectModal,
  setSelectedRows,
  filteringUsers,
}) => {
  // Columns for the table
  const columns = [
    {
      title: 'First Name',
      dataIndex: 'firstName',
      key: 'firstName',
    },

    {
      title: 'Last Name',
      dataIndex: 'lastName',
      key: 'lastName',
    },
    {
      title: 'Email',
      dataIndex: 'email',
      key: 'email',
    },
    {
      title: 'Roles',
      dataIndex: 'roles',
      key: 'roles',
    },
    {
      title: 'Applications',
      dataIndex: 'applications',
      key: 'applications',
    },
    {
      title: 'Actions',
      key: 'actions',
      render: (_, record) => (
        <>
          <Tooltip title="View  Details">
            <EyeOutlined style={{ color: 'var(--primary)', marginRight: 15 }} onClick={() => viewUserDetails(record)} />
          </Tooltip>
          <Tooltip title="Edit">
            <EditOutlined style={{ color: 'var(--primary)', marginRight: 15 }} onClick={() => editUser(record)} />
          </Tooltip>

          <Popover
            placement="bottom"
            content={
              <div
                style={{ display: 'flex', flexDirection: 'column', color: 'var(--primary)', cursor: 'pointer' }}
                className="JobMonitoringTable__hidden_actions">
                <div title="Approve" onClick={() => evaluateUser()}>
                  Approve / Reject
                </div>

                <Popconfirm
                  title={
                    <>
                      <div style={{ fontWeight: 'bold' }}>{`Delete ${record.firstName}`} </div>
                      <div style={{ maxWidth: 400 }}>
                        This action will delete all related data including notifications generated by this user. If you
                        would like to keep the data, you can deactivate the user instead.
                      </div>
                    </>
                  }
                  onConfirm={() => handleDeleteUser({ id: record.id })}
                  okText="Continue"
                  okButtonProps={{ danger: true }}
                  cancelText="Close"
                  cancelButtonProps={{ type: 'primary', ghost: true }}
                  style={{ width: '500px !important' }}>
                  <DeleteOutlined style={{ marginRight: 15 }} />
                  Delete
                </Popconfirm>
              </div>
            }>
            <span style={{ color: 'var(--secondary)' }}>
              More <DownOutlined style={{ fontSize: '10px' }} />
            </span>
          </Popover>
        </>
      ),
    },
  ];

  // When eye icon is clicked, display the user details modal
  const viewUserDetails = (record) => {
    setSelectedUser(record);
    setDisplayUserDetailsModal(true);
  };

  // When edit icon is clicked, display the add  user modal and set the selected user
  const editUser = (record) => {
    setEditingData({ isEditing: true, selectedUser: record });
    setSelectedUser(record);
    setDisplayAddUserModal(true);
  };

  // Approve or reject user
  const evaluateUser = (record) => {
    setSelectedUser(record);
    setDisplayAddRejectModal(true);
  };

  return (
    <Table
      dataSource={users}
      loading={filteringUsers}
      columns={columns}
      rowKey="id"
      size="small"
      rowSelection={{
        type: 'checkbox',
        onChange: (_selectedRowKeys, selectedRowsData) => {
          setSelectedRows(selectedRowsData);
        },
      }}
      pagination={{ pageSize: 20 }}
    />
  );
};

export default UserManagementTable;
