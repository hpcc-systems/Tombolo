const APPROVAL_STATUS = {
  APPROVED: 'approved',
  PENDING: 'pending',
  REJECTED: 'rejected',
};

const ActivityKindMap = {
  // Graph and structural activities
  1: 'Thor Graph',
  2: 'Thor Subgraph',
  3: 'Thor Operation',
  4: 'Workflow',
  5: 'Sequential',
  6: 'Split',
  7: 'Splitter',
  8: 'Combine',
  9: 'Spill',
  10: 'Limit',
  11: 'Skip',
  12: 'First N',
  13: 'Choosen',
  14: 'Enth',
  15: 'Sample',
  16: 'Output',
  17: 'Distribute',
  18: 'Hash Distribute',
  19: 'Regroup',
  20: 'Merge',
  21: 'Funnel',
  22: 'Store Result',
  23: 'Apply',
  24: 'Inline Dataset',
  25: 'Build Index',
  26: 'Key Diff',
  27: 'Key Patch',
  28: 'Fetch',
  29: 'CSV Write',
  30: 'XML Write',
  31: 'Pipe Read',
  32: 'Pipe Write',
  33: 'Pipe Through',
  34: 'CSV Read',
  35: 'XML Read',
  36: 'Soap Call',
  37: 'HTTP Call',
  38: 'MySQL Read',
  39: 'Null',
  40: 'Action',
  41: 'Scope',
  42: 'Side Effect',
  43: 'Evaluate',
  44: 'If',
  45: 'Child Query',
  46: 'Dataset From Row',
  47: 'Dataset From Transform',
  48: 'Local Result Read',
  49: 'Local Result Write',
  50: 'Dictionary Result Read',
  51: 'Dictionary Result Write',
  52: 'Workunit Read',
  53: 'Dataset Result',
  54: 'Row Result',
  55: 'Linked Raw Iterator',
  56: 'Spill Read',
  57: 'Spill Write',
  58: 'Once',
  59: 'Abort',
  60: 'Limit Skip',
  61: 'Catch',
  62: 'Skip Catch',
  63: 'Create Row Limit',
  64: 'Key Lookup',
  65: 'All or Exists',
  66: 'Grouped',
  67: 'Sorted',
  68: 'Distributed',
  69: 'Nway Input',
  70: 'Nway Merge',
  71: 'Nway Select',
  72: 'Non Empty',
  73: 'Filtered',
  74: 'Disk Count',
  75: 'Disk Aggregate',
  76: 'Disk Group Aggregate',
  77: 'Index Count',
  78: 'Index Aggregate',
  79: 'Index Group Aggregate',
  80: 'Child Normalize',
  81: 'Child Aggregate',
  82: 'Child Group Aggregate',
  83: 'Child Tee',
  84: 'Dataset From Dictionary',
  85: 'Dictionary From Dataset',
  86: 'Nway Join',
  87: 'Nway Merge Join',
  88: 'Nway Lookup Join',
  89: 'Step',
  90: 'Traced',

  // File I/O activities
  91: 'CSV Read',
  92: 'Flat File Read',
  93: 'Index Read',
  94: 'XML Read',
  95: 'JSON Read',
  96: 'Disk Read',
  97: 'Disk Normalize',
  98: 'Disk Aggregate',
  99: 'Disk Count',
  100: 'Disk Group Aggregate',
  101: 'Index Normalize',
  102: 'Index Aggregate',
  103: 'Index Count',
  104: 'Index Group Aggregate',
  105: 'Child Dataset',
  106: 'Data Source',
  107: 'Disk Write',
  108: 'Sort',
  109: 'Sorted',
  110: 'Trace',
  111: 'Expected',
  112: 'Prefetch',
  113: 'Prefetch Project',
  114: 'Prefetch Count',
  115: 'Executewhen',
  116: 'Update',
  117: 'Output Internal',
  118: 'Merge',
  119: 'Use Result',
  120: 'Raw Iterator',

  // Data processing activities
  125: 'Count',
  126: 'Aggregate',
  127: 'Hash Aggregate',
  128: 'Group Aggregate',
  129: 'Join',
  130: 'Denormalize',
  131: 'Normalize',
  132: 'Distribute',
  133: 'Rollup',
  134: 'Dedup',
  135: 'Project',
  136: 'Filter',
  137: 'Map',
  138: 'Split',
  139: 'Merge',
  140: 'Funnel',
  141: 'If',
  142: 'Case',
  143: 'When',
  144: 'Choose',
  145: 'Iterate',
  146: 'Loop',
  147: 'Subsort',
  148: 'Subaggregate',
  149: 'Subjoin',
  150: 'Subnormalize',
  151: 'Process',
  152: 'Transform',
  153: 'Group',
  154: 'Combine Group',
  155: 'Rollup Group',
  156: 'Regroup',
  157: 'Co Group',
  158: 'Join Light',
  159: 'All Join',
  160: 'Full Join',
  161: 'Full Only Join',
  162: 'Left Join',
  163: 'Left Only Join',
  164: 'Right Join',
  165: 'Right Only Join',
  166: 'Lookup Join',
  167: 'Lookup Join Light',
  168: 'All Lookup Join',
  169: 'Full Lookup Join',
  170: 'Left Lookup Join',
  171: 'Right Lookup Join',
  172: 'Half Lookup Join',
  173: 'Self Join',
  174: 'Merge Join',
  175: 'Lookup Denormalize',
  176: 'All Denormalize',
  177: 'Denormalize Group',
  178: 'Hash Denormalize',
  179: 'Hash Denormalize Group',
  180: 'Hash Join',
  181: 'Hash Denormalize',
  182: 'Smart Join',
  183: 'Smart Denormalize',
  184: 'Cartesian Product',
  185: 'Cosort',
  186: 'Output Sort',
  187: 'Topn',
  188: 'Choosesets',
  189: 'Pipe',
  190: 'Through',
  191: 'New Transform',
  192: 'Add Files',
  193: 'Allocator',
  194: 'Http Post',
  195: 'Local Iterate',
  196: 'Spill Write',
  197: 'Spill Read',
  198: 'Persist',
  199: 'Stored',
  200: 'Thor',
  201: 'Hthor',
  202: 'Roxie',
  203: 'Sequential Action',
  204: 'Parallel Action',
  205: 'Empty Action',
  206: 'Pass Through',
  207: 'Setresult',
  208: 'Ensure Result',
  209: 'Update Result',
  210: 'Output Scalar',
  211: 'Set WorkFlow Item',
  212: 'Set WorkFlow ItemResult',
  213: 'Wait WorkFlow Item',
  214: 'Wait WorkFlow ItemResult',
  215: 'Fail',
  216: 'Success',
  217: 'Recovery',
  218: 'User',
  219: 'Cluster',
  220: 'Critical',
  221: 'Event Name',
  222: 'Event Extra',
  223: 'Cron',
  224: 'Wait',
  225: 'When Action',
  226: 'Priority',
  227: 'Persist Check',
  228: 'Named',
  229: 'Preload',
  230: 'Output Dataset',
  231: 'Output Dictionary',
  232: 'Output Scalar Action',
  233: 'Output Row Action',
  234: 'Set Result Action',
  235: 'Ensemble Result Action',
  236: 'Get Result Action',
  237: 'Get Graph Result Action',
  238: 'Graph Loop Result Read',
  239: 'Library Select',
  240: 'Library If',
  241: 'Library Map',
  242: 'Library Project',
  243: 'Library Filter',
  244: 'Library Aggregate',
  245: 'Library Group Aggregate',
  246: 'Library Input',
  247: 'Library Output',
  248: 'Remote Result',
  249: 'Allnodes',
  250: 'Thisnode',
  251: 'Graphloop',
  252: 'Param Read',
  253: 'Local Result Spill',
  254: 'Local Result Write',
  255: 'Dictionary Result Write',
  256: 'Dictionary Local Result Write',
};

/**
 * Get the human-readable name for an activity kind code
 * @param kind - The numeric kind code (as string or number)
 * @returns The human-readable activity name, or "Unknown Activity" if not found
 */
function getActivityKindName(kind) {
  const kindStr = String(kind);
  return ActivityKindMap[kindStr] || `Unknown Activity (${kindStr})`;
}

module.exports = { APPROVAL_STATUS, ActivityKindMap, getActivityKindName };
