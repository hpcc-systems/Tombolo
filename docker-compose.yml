version: "3"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - ${ZK_PORT}:${ZK_PORT}
    environment:
      #- ALLOW_ANONYMOUS_LOGIN=yes
      #- ZOO_HEAP_SIZE=512
      - ZOO_ENABLE_AUTH=yes
      - ZOO_SERVER_USERS=${ZOO_SERVER_USERS}
      - ZOO_SERVER_PASSWORDS=${ZOO_SERVER_PASSWORDS}
      - ZOO_CLIENT_USER=${ZOO_CLIENT_USER}
      - ZOO_CLIENT_PASSWORD=${ZOO_CLIENT_PASSWORD}
      - ZOO_TLS_CLIENT_ENABLE=yes
      - ZOO_TLS_CLIENT_KEYSTORE_FILE=${ZOO_TLS_CLIENT_KEYSTORE_FILE}
      - ZOO_TLS_CLIENT_KEYSTORE_PASSWORD=${ZOO_TLS_CLIENT_KEYSTORE_PASSWORD}
      - ZOO_TLS_CLIENT_TRUSTSTORE_FILE=${ZOO_TLS_CLIENT_TRUSTSTORE_FILE}
      - ZOO_TLS_CLIENT_TRUSTSTORE_PASSWORD=${ZOO_TLS_CLIENT_TRUSTSTORE_PASSWORD}
    volumes:
      - ${KAFKA_ZOOKEEPER_CERTS_PATH}:/opt/bitnami/kafka/conf/certs
    networks:
      - tombolo-network

  kafka:
    hostname: ${KAFKA_HOST_NAME}
    image: 'bitnami/kafka:latest'
    ports:
      - ${KAFKA_PORT}:${KAFKA_PORT}
      - ${KAFKA_EXTERNAL_PORT}:${KAFKA_EXTERNAL_PORT}
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:3181
      - KAFKA_CFG_LISTENERS=INTERNAL://kafka:${KAFKA_PORT},CLIENT://kafka:${KAFKA_CLIENT_PORT},EXTERNAL://:${KAFKA_EXTERNAL_PORT}
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:${KAFKA_PORT},CLIENT://kafka:${KAFKA_CLIENT_PORT},EXTERNAL://${KAFKA_HOST_NAME}:${KAFKA_EXTERNAL_PORT}
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:SSL,EXTERNAL:SSL,CLIENT:SASL_SSL
      - KAFKA_ZOOKEEPER_PROTOCOL=SASL_SSL
      - KAFKA_ZOOKEEPER_USER=${ZOO_SERVER_USERS}
      - KAFKA_ZOOKEEPER_PASSWORD=${ZOO_SERVER_PASSWORDS}
      - KAFKA_ZOOKEEPER_TLS_KEYSTORE_PASSWORD=${ZOO_TLS_CLIENT_KEYSTORE_PASSWORD}
      - KAFKA_ZOOKEEPER_TLS_TRUSTSTORE_PASSWORD=${ZOO_TLS_CLIENT_TRUSTSTORE_PASSWORD}
      - KAFKA_ZOOKEEPER_TLS_VERIFY_HOSTNAME=false
      - KAFKA_CFG_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=
      - KAFKA_CLIENT_USER=${KAFKA_CLIENT_USER}
      - KAFKA_CLIENT_PASSWORD=${KAFKA_CLIENT_PASSWORD}
      - KAFKA_CERTIFICATE_PASSWORD=${KAFKA_CERTIFICATE_PASSWORD}
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_SASL_ENABLED_MECHANISMS=PLAIN
      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=PLAIN
      - KAFKA_SSL_CLIENT_AUTH=required
    networks:
      - tombolo-network
    volumes:
      - ${KAFKA_ZOOKEEPER_CERTS_PATH}:/bitnami/kafka/config/certs

  web:
    build:
      context: ./client-reactjs
      dockerfile: Dockerfile
    networks:
      - tombolo-network
    environment:
      PORT: ${WEB_PORT}
      PROXY_URL: http://node:${PORT}
      WEB_EXPOSED_PORT: ${WEB_EXPOSED_PORT}
      WEB_EXPOSED_HTTP_PORT: ${WEB_EXPOSED_HTTP_PORT}
      HOSTNAME: ${HOST_HOSTNAME}
    ports:
      - ${WEB_PORT}:${WEB_PORT}
      - ${WEB_EXPOSED_PORT}:${WEB_EXPOSED_PORT}
      - ${WEB_EXPOSED_HTTP_PORT}:${WEB_EXPOSED_HTTP_PORT}
    volumes:
      - ${CERT_PATH}:/etc/ssl
    depends_on:
      - mysql_db
    env_file:
      - .env
    entrypoint: [sh, /etc/nginx/run_nginx.sh, "${HOST_HOSTNAME}"]
  node:
    #restart: always
    entrypoint: [sh, ./docker-entry.sh, "mysql_db", "${DB_PORT}"]
    build:
      context: ./server
      dockerfile: Dockerfile
    volumes:
      - /tmp/pm2
    networks:
      - tombolo-network
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - mysql_db
    env_file:
      - .env

  mysql_db:
    image: mysql:5.7
    restart: always
    command: --innodb_use_native_aio=0 --sql_mode=""
    volumes:
      - ./mysql-data:/var/lib/mysql
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_HOST: ${DB_HOSTNAME}
    networks:
      - tombolo-network
    env_file:
      - .env

networks:
  tombolo-network:
    driver: bridge